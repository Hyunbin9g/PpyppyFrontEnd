import React, { useEffect, useState } from 'react';
import styled from 'styled-components';

const AnimatedNumber = ({ value, duration = 2000 }) => {
  const [displayValue, setDisplayValue] = useState(0);

  useEffect(() => {
    const increment = value / (duration / 10); // 10ms마다 값을 증가
    let currentValue = 0;

    const interval = setInterval(() => {
      currentValue += increment;
      if (currentValue >= value) {
        currentValue = value;
        clearInterval(interval);
      }
      setDisplayValue(Math.round(currentValue)); // 반올림하여 표시
    }, 10);

    return () => clearInterval(interval); // 컴포넌트 언마운트 시 setInterval 해제
  }, [value, duration]);

  // JSX에서 StyledAnimatedSpan을 값으로 바로 사용
  return <StyledAnimatedSpan>{displayValue}</StyledAnimatedSpan>;
};

export default AnimatedNumber;

// styled-components로 애니메이션 추가
const StyledAnimatedSpan = styled.span`
  display: inline-block;
  animation: bounce 0.5s ease-out;

  @keyframes bounce {
    0% {
      transform: translateY(0);
      opacity: 0.8;
    }
    50% {
      transform: translateY(-10px);
      opacity: 1;
    }
    100% {
      transform: translateY(0);
      opacity: 0.8;
    }
  }
`;
